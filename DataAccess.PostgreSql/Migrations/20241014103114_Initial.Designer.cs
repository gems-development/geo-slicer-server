// <auto-generated />
using DataAccess.PostgreSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.PostgreSql.Migrations
{
    [DbContext(typeof(PostgreApplicationContext))]
    [Migration("20241014103114_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.2.24474.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.GeometryFragment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Polygon>("Fragment")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<int>("GeometryOriginalId")
                        .HasColumnType("integer");

                    b.Property<MultiLineString>("NonRenderingBorder")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.HasKey("Id");

                    b.HasIndex("GeometryOriginalId");

                    b.ToTable("GeometryFragments");
                });

            modelBuilder.Entity("Entities.GeometryOriginal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Polygon>("Data")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.HasKey("Id");

                    b.ToTable("GeometryOriginals");
                });

            modelBuilder.Entity("Entities.GeometryFragment", b =>
                {
                    b.HasOne("Entities.GeometryOriginal", "GeometryOriginal")
                        .WithMany("GeometryFragments")
                        .HasForeignKey("GeometryOriginalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeometryOriginal");
                });

            modelBuilder.Entity("Entities.GeometryOriginal", b =>
                {
                    b.Navigation("GeometryFragments");
                });
#pragma warning restore 612, 618
        }
    }
}
